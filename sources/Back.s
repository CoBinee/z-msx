; Back.s : 背景
;


; モジュール宣言
;
    .module Back

; 参照ファイル
;
    .include    "bios.inc"
    .include    "vdp.inc"
    .include    "System.inc"
    .include    "App.inc"
    .include	"Game.inc"
    .include    "Back.inc"

; 外部変数宣言
;

; マクロの定義
;


; CODE 領域
;
    .area   _CODE

; 背景を初期化する
;
_BackInitialize::
    
    ; レジスタの保存

    ; 背景の初期化
    ld      hl, #backDefault
    ld      de, #_back
    ld      bc, #BACK_LENGTH
    ldir

    ; レジスタの復帰
    
    ; 終了
    ret

; 背景を更新する
;
_BackUpdate::
    
    ; レジスタの保存

    ; 初期化
    ld      a, (_back + BACK_STATE)
    or      a
    jr      nz, 09$

    ; パターンネームの設定
    ld      hl, #(_back + BACK_FLAG)
    set     #BACK_FLAG_PATTERN_NAME_BIT, (hl)

    ; 初期化の完了
    ld      hl, #(_back + BACK_STATE)
    inc     (hl)
09$:
    
    ; レジスタの復帰
    
    ; 終了
    ret

; 背景を描画する
;
_BackRender::

    ; レジスタの保存

    ; パターンネームの描画
    ld      hl, #(_back + BACK_FLAG)
    bit     #BACK_FLAG_PATTERN_NAME_BIT, (hl)
    jr      z, 19$
    res     #BACK_FLAG_PATTERN_NAME_BIT, (hl)
    ld      hl, #backPatternName
    ld      de, #(_patternName + 0x0260)
    ld      bc, #(0x0020 * 0x0005)
    ldir
19$:

    ; スプライトの描画
    ld      hl, #backSprite
    ld      de, #(_sprite + GAME_SPRITE_BACK)
    ld      bc, #(0x0004 * 0x0004)
    ldir

    ; レジスタの復帰

    ; 終了
    ret

; 背景にヒットしたかどうかを判定する
;
_BackIsHit::

    ; レジスタの保存
    push    hl
    push    bc

    ; de < Y/X 位置
    ; a  > 結果

    ; ヒットの判定
    ld      a, d
    and     #0xf8
    sub     #0x98
    jr      c, 18$
    add     a, a
    add     a, a
    ld      c, a
    ld      a, e
    and     #0xf8
    rrca
    rrca
    rrca
    add     a, c
    ld      c, a
    ld      b, #0x00
    ld      hl, #backHit
    add     hl, bc
    ld      a, (hl)
    cp      #BACK_HIT_LAND
    jr      nz, 19$
    ld      a, d
    and     #0x07
    cp      #0x07
    jr      nz, 18$
    ld      a, e
    cp      #0x7c
    jr      c, 17$
    cp      #0x84
    jr      nc, 17$
    ld      a, #BACK_HIT_LAND
    jr      19$
17$:
    ld      a, #BACK_HIT_MISS
    jr      19$
18$:
    xor     a
;   jr      19$
19$:

    ; レジスタの復帰
    pop     bc
    pop     hl

    ; 終了
    ret

; 定数の定義
;

; 背景の初期値
;
backDefault:

    .db     BACK_STATE_NULL
    .db     BACK_FLAG_NULL

; ヒット判定
;
backHit:

    .db     0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    .db     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80
    .db     0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    .db     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80
    .db     0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00
    .db     0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80
    .db     0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01
    .db     0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80
    .db     0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80
    .db     0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80

; パターンネーム
;
backPatternName:

    .db     0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    .db     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68
    .db     0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    .db     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69
    .db     0x62, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41, 0x42
    .db     0x43, 0x44, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x6a
    .db     0x63, 0x64, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x49, 0x4a
    .db     0x4b, 0x4c, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x6b, 0x6c
    .db     0x65, 0x66, 0x67, 0x57, 0x56, 0x56, 0x56, 0x56, 0x56, 0x56, 0x56, 0x56, 0x56, 0x50, 0x51, 0x52
    .db     0x53, 0x54, 0x55, 0x56, 0x56, 0x56, 0x56, 0x56, 0x56, 0x56, 0x56, 0x56, 0x57, 0x6d, 0x6e, 0x6f

; スプライト
;
backSprite:

    .db     0xa0 - 0x01, 0x69, 0x20, VDP_COLOR_CYAN
    .db     0xa0 - 0x01, 0x88, 0x24, VDP_COLOR_CYAN
    .db     0xb0 - 0x01, 0x70, 0x28, VDP_COLOR_MAGENTA
    .db     0xb0 - 0x01, 0x80, 0x2c, VDP_COLOR_MAGENTA


; DATA 領域
;
    .area   _DATA

; 変数の定義
;

; 背景
;
_back::

    .ds     BACK_LENGTH
